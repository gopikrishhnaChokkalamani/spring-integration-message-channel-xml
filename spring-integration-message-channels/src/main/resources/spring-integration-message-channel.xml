<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/integration
http://www.springframework.org/schema/integration/spring-integration.xsd
http://www.springframework.org/schema/integration/stream
http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">

	<!-- This example explains how publisher-subscriber channel, pollable channel 
		and direct channel works -->

	<int-stream:stdin-channel-adapter id="producer"
		channel="messageChannel" />

	<int:poller id="defaultPoller" default="true"
		max-messages-per-poll="5" fixed-rate="60" />

	<int-stream:stdout-channel-adapter
		id="consumer1" channel="messageChannel" append-newline="true" />
	<int-stream:stdout-channel-adapter
		id="consumer2" channel="messageChannel" append-newline="true" />

	<!-- Publish-Subcriber Channel -->
	<!-- Message will be delivered to both the consumer1 & consumer2 -->
	<int:publish-subscribe-channel id="messageChannel" />

	<!-- Pollable Channel -->
	<!-- Inspite of multiple consumers defined, message will be delivered only 
		to the first consumer -->
	<!-- <int:channel id="messageChannel"> <int:queue capacity="2" /> </int:channel> -->

	<!-- Direct Channel -->
	<!-- Inspite of multiple consumers deinfed, message will be delivered only 
		to the first consumer -->
	<!-- <int:channel id="messageChannel" /> -->
</beans>
